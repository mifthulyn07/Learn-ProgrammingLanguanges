#include <iostream>
#include <string>
#include <bitset>
using namespace std;

void printbinary(unsigned short val, string nama){
    cout<<nama<<" = "<<bitset<8>(val)<<endl;//8 bit yang ditampilkan
}

int main()
{
    unsigned short a = 5;//hanya ada (+)
    unsigned short b = 10;
    unsigned short c;

    cout<<"& - bitwise AND"<<endl;
    c = a & b;
    printbinary(a,"a");
    printbinary(b,"b");
    printbinary(c,"c");

    cout<<endl<<"| - bitwise OR"<<endl;
    c = a | b;
    printbinary(a,"a");
    printbinary(b,"b");
    printbinary(c,"c");
    cout<<"c = "<<c<<endl;

    cout<<endl<<"^ - bitwise XOR"<<endl;
    c = a ^ b;
    printbinary(a,"a");
    printbinary(b,"b");
    printbinary(c,"c");
    cout<<"c = "<<c<<endl;

    cout<<endl<<"~ = bitwise NOT"<<endl;
    c = ~a;
    printbinary(a,"a");
    printbinary(c,"c");
    cout<<"c = "<<c<<endl;

    cout<<endl<<"<< - bitwise SHL"<<endl;
    c = a << 1; //artinya bergeser 1 tempat ke kiri
    printbinary(a,"a");
    printbinary(c,"c");
    cout<<"c = "<<c<<endl;

    cout<<endl<<">> - bitwise SHL"<<endl;
    c = a >> 1;//artinya bergeser 1 tempat ke kanan
    printbinary(a,"a");
    printbinary(c,"c");
    cout<<"c = "<<c<<endl;
    return 0;
}
//BITWISE OPERATOR
    // &   AND bitwise AND
    // |   OR bitwise inclusive OR
    // ^   XOR bitwise inclusive OR
    // ~   NOT
    // <<  SHL shift bits left
    // >>  SHR shift bits right
