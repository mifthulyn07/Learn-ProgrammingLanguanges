#include <iostream>
#include <gl/glut.h>
using namespace std;
	
double x,y,z;
void Point (void){
	glClear (GL_COLOR_BUFFER_BIT);
	glPointSize (5.0f);
	glBegin(GL_POINTS);
			glColor3f (1.0f, 0.0f, 0.0f);//merah
			glVertex3f(x, y, z);
	glEnd();
	glFlush();
}

int main(int argc, char*argv[]){

	cout<<"masukkan x: ";cin>>x;
	cout<<"masukkan y: ";cin>>y;
	cout<<"masukkan x: ";cin>>z;
	Point();
	glutInit (&argc, argv);
	glutInitWindowSize (640,480);
	glutInitDisplayMode (GLUT_SINGLE | GLUT_RGBA);
	glutCreateWindow("Membuat titik");
	glutDisplayFunc(Point);
	glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
	glutMainLoop();
	return 0;
}
------------------------------------------------------------------------------------------------
glBegin (GL_TRIANGLES);//hanya bisa sampai 1 segitiga saja
			glColor3f(1.0f, 0.0f,0.0f); glVertex2f (-0.10,-0.10);//merah
			glColor3f(1.0f, 1.0f,0.0f); glVertex2f (0.10, -0.10);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex2f (-0.20f, 0.10f);//ungu
    glEnd();
    glBegin(GL_POLYGON);
			glColor3f(0.0f, 1.0f,0.0f); glVertex2f(-0.60,0.30);//hijau
			glColor3f(1.0f, 1.0f, 0.0f); glVertex2f(-0.30,0.30);//kuning
			glColor3f(0.5f, 1.0f, 1.0f); glVertex2f(-0.30,-0.10);//ungu
			glColor3f(0.5f, 1.0f, 1.0f); glVertex2f(-0.60,-0.10);//cyan
glEnd ();
----------------------------------------------------------------------------------------------
>>>>>>>>>>>>JAWABAN NO.1<<<<<<<<<<<<<<<<<<
#include <iostream>
#include <gl/glut.h>
using namespace std;
double  xA,yA,xB,yB,xC,yC, xa,ya,xb,yb,xc,yc,xd,yd;
char pilihan;
void BangunDatar (void)
{
    glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLES);//hanya bisa sampai 1 segitiga saja
			glColor3f(1.0f, 0.0f,0.0f); glVertex2f (xA,yA);//merah
			glColor3f(1.0f, 1.0f,0.0f); glVertex2f (xB,yB);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex2f (xC,yC);//ungu
    glEnd();
    glBegin(GL_POLYGON);
			glColor3f(0.0f, 1.0f,0.0f); glVertex2f(xa,ya);//hijau
			glColor3f(1.0f, 1.0f, 0.0f); glVertex2f(xb,yb);//kuning
			glColor3f(0.5f, 1.0f, 1.0f); glVertex2f(xc,yc);//ungu
			glColor3f(0.5f, 1.0f, 1.0f); glVertex2f(xd,yd);//cyan
glEnd ();
    glFlush ();
}

int main (int argc, char*argv[])
{
	glutInit (&argc, argv);
    glutInitWindowSize (640,480);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGBA);
	cout<<"===================="<<endl;
	cout<<"PROGRAM BANGUN DATAR"<<endl;
	cout<<"===================="<<endl;
	cout<<"By: Kelompok Ganjil SI3"<<endl<<endl;
	cout<<"Masukkan Pilihan: "<<endl;
	cout<<"1.segitiga"<<endl;
	cout<<"2.Persegi"<<endl;
	cout<<"pilihan anda? ";cin>>pilihan;
	if(pilihan == '1'){
		cout<<endl;
		cout<<"======================="<<endl;
		cout<<"TENTUKAN TITIK SEGITIGA"<<endl;
		cout<<"======================="<<endl;
		cout<<"Tentukan titik A"<<endl;
		cout<<"masukkan x: ";cin>>xA;
		cout<<"masukkan y: ";cin>>yA;
		cout<<endl;
		cout<<"Tentukan titik B"<<endl;
		cout<<"masukkan x: ";cin>>xB;
		cout<<"masukkan y: ";cin>>yB;
		cout<<endl;
		cout<<"Tentukan titik C"<<endl;
		cout<<"masukkan x: ";cin>>xC;
		cout<<"masukkan y: ";cin>>yC;
		glutCreateWindow ("BENTUK SEGITIGA");
    	glutDisplayFunc (BangunDatar);
    	glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();
	}
	else if(pilihan=='2'){
		cout<<endl;
		cout<<"======================"<<endl;
		cout<<"TENTUKAN TITIK PERSEGI"<<endl;
		cout<<"======================"<<endl;
		cout<<"Tentukan titik A"<<endl;
		cout<<"masukkan x: ";cin>>xa;
		cout<<"masukkan y: ";cin>>ya;
		cout<<endl;
		cout<<"Tentukan titik B"<<endl;
		cout<<"masukkan x: ";cin>>xb;
		cout<<"masukkan y: ";cin>>yb;
		cout<<endl;
		cout<<"Tentukan titik C"<<endl;
		cout<<"masukkan x: ";cin>>xc;
		cout<<"masukkan y: ";cin>>yc;
		cout<<endl;
		cout<<"Tentukan titik D"<<endl;
		cout<<"masukkan x: ";cin>>xd;
		cout<<"masukkan y: ";cin>>yd;
		glutCreateWindow ("BENTUK PERSEGI");
    	glutDisplayFunc (BangunDatar);
    	glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();
	}
	else{
		cout<<cout<<"Tidak ada pilihan "<<pilihan<<"!!!";
	}
    
    return 0;
}
-----------------------------------------------------------------------------
>>>>>>>>>>>>JAWABAN NO.2<<<<<<<<<<<<<<<<<<
#include <iostream>
#include <gl/glut.h>
using namespace std;
char pilihan, pilihan1,pilihan2;

void BentukAwal (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glLineWidth (2.0f);
	glBegin(GL_LINES);
			glColor3f (1.0,1.0,1.0);//putih
			glVertex3f (-10.0f, 0.0f, 0.0f);
			glVertex3f (10.0f, 0.0f, 0.0f);
			
			glColor3f (1.0,1.0,1.0);
			glVertex3f (0.0f, -10.0f, 0.0f);
			glVertex3f (0.0f, 10.0f, 0.0f);
	glEnd();
	
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Translasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glTranslatef (-0.2, -0.2, 0.0);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (-0.2, -0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (-0.6, -0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (-0.2, -0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (-0.6, -0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Rotasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glRotated (60.0, 0.0, 0.0, 1.0);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Skalasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glScaled(0.5, 0.5, 0.0);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Refleksi1 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glBegin(GL_LINES);
			glColor3f (1.0,1.0,1.0);
			glVertex3f (-10.0f, 0.0f, 0.0f);
			glVertex3f (10.0f, 0.0f, 0.0f);
	glEnd();
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
	glEnd();	
	glTranslatef( 0.0, -0.8, 0.0 );
	glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.6, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.6, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.2, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.2, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Refleksi2 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glBegin(GL_LINES);
			glColor3f (1.0,1.0,1.0);
			glVertex3f (0.0f, -10.0f, 0.0f);
			glVertex3f (0.0f, 10.0f, 0.0f);
	glEnd();
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
	glEnd();	
	glTranslatef( -0.8f, 0.0f, 0.0f );
	glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.2, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.6, 0.6, 0.0);//ungu
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.6, 0.0);//cyan
			
    glEnd();
    glFlush ();
}
void Shear1 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.6, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (1.0, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Shear2 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.6, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 1.0, 0.0);//cyan	
    glEnd();
    glFlush ();
}

int main (int argc, char*argv[])
{
	glutInit (&argc, argv);
    glutInitWindowSize (700,700);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGBA);

	cout<<"==========================="<<endl;
	cout<<"PROGRAM 5 MENU TRANSFORMASI"<<endl;
	cout<<"==========================="<<endl;
	cout<<"By: Kelompok Ganjil SI3"<<endl<<endl;
	cout<<"Masukkan Pilihan: "<<endl;
		cout<<"1.BentukAwal"<<endl;
		cout<<"2.Translasikan"<<endl;
		cout<<"3.Rotasikan"<<endl;
		cout<<"4.Skalasikan"<<endl;
		cout<<"5.Refleksikan"<<endl;
		cout<<"6.Shearkan"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan;
		cout<<endl;
	if(pilihan == '1'){
		glutCreateWindow ("BENTUK AWAL");
    	glutDisplayFunc (BentukAwal);
    	glClearColor (0.0, 0.0, 0.0, 0.0);
    	glutMainLoop ();
	}
	else if(pilihan == '2'){
    	glutCreateWindow ("TRANSLASI");
    	glutDisplayFunc (Translasi);
    	glClearColor (0.0, 0.0, 0.0, 0.0);
    	glutMainLoop ();
	}
	else if(pilihan == '3'){
    	glutCreateWindow ("ROTASI");
    	glutDisplayFunc (Rotasi);
		glClearColor (0.0, 0.0, 0.0, 0.0);
    	glutMainLoop ();		
	}
	else if(pilihan == '4'){
    	glutCreateWindow ("SKALASI");
    	glutDisplayFunc (Skalasi);	
		glClearColor (0.0, 0.0, 0.0, 0.0);
    	glutMainLoop ();	
	}
	else if(pilihan == '5'){
		cout<<"================="<<endl;
		cout<<"TENTUKAN REFLEKSI"<<endl;
		cout<<"================="<<endl;
		cout<<"Anda ingin merefleksikannya terhadap?"<<endl;
		cout<<"1.sumbu x"<<endl;
		cout<<"2.sumbu y"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan1;
		cout<<endl;
		if(pilihan1 == '1'){
			glutCreateWindow ("REFLEKSI TERHADAP SUMBU X");
    		glutDisplayFunc (Refleksi1);
    		glClearColor (0.0, 0.0, 0.0, 0.0);
    		glutMainLoop ();
		}
		else if (pilihan1 == '2'){
			glutCreateWindow ("REFLEKSI TERHADAP SUMBU Y");
    		glutDisplayFunc (Refleksi2);
    		glClearColor (0.0, 0.0, 0.0, 0.0);
    		glutMainLoop ();
		}
    	else{
    		cout<<"Tidak ada pilihan "<<pilihan1<<"!!!";
		}
	}
	else if(pilihan == '6'){
    	cout<<"=============="<<endl;
		cout<<"TENTUKAN SHEAR"<<endl;
		cout<<"=============="<<endl;
		cout<<"Anda ingin menshearkannya terhadap?"<<endl;
		cout<<"1.sumbu x"<<endl;
		cout<<"2.sumbu y"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan2;
		cout<<endl;
		if(pilihan2 == '1'){
			glutCreateWindow ("SHEAR TERHADAP SUMBU X");
    		glutDisplayFunc (Shear1);
    		glClearColor (0.0, 0.0, 0.0, 0.0);
    		glutMainLoop ();
		}
		else if (pilihan2 == '2'){
			glutCreateWindow ("SHEAR TERHADAP SUMBU Y");
    		glutDisplayFunc (Shear2);
    		glClearColor (0.0, 0.0, 0.0, 0.0);
    		glutMainLoop ();
		}
    	else{
    		cout<<"Tidak ada pilihan "<<pilihan2<<"!!!";
		}		
	}
	else{
		cout<<"Tidak ada pilihan "<<pilihan<<"!!!";
	}
    return 0;
}
------------------------------------------------------------------------------------------------
>>>>>>>>>>>>JAWABAN NO.3<<<<<<<<<<<<<<<<<<
#include <iostream>
#include <gl/glut.h>
using namespace std;
char pilihan,pilihan1,pilihan2;
double xtrans, ytrans, ztrans, s, xrot, yrot, zrot, xscal, yscal, zscal, xref, yref, zref, k1, k2;
void BentukAwal (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glLineWidth (2.0f);
	glBegin(GL_LINES);
			glColor3f (0.0, 0.0, 0.0);//hitam
			glVertex3f (-10.0f, 0.0f, 0.0f);
			glVertex3f (10.0f, 0.0f, 0.0f);
			
			glColor3f (0.0, 0.0, 0.0);
			glVertex3f (0.0f, -10.0f, 0.0f);
			glVertex3f (0.0f, 10.0f, 0.0f);
	glEnd();
	
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Translasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glTranslatef (xtrans, ytrans, ztrans);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (-0.2, -0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (-0.6, -0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (-0.2, -0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (-0.6, -0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Rotasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glRotated (s, xrot, yrot, zrot);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Skalasi (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
	glScaled(xscal, yscal, zscal);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Refleksi1 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
	glEnd();	
	glTranslatef( 0.0, yref, 0.0 );
	glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.6, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.6, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.2, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.2, 0.0);//cyan	
    glEnd();
    glFlush ();
}
void Refleksi2 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6, 0.0);//cyan	
	glEnd();
		
	glTranslatef( xref, 0.0, 0.0 );
	glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.2, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.6, 0.6, 0.0);//ungu
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.6, 0.0);//cyan
			
    glEnd();
    glFlush ();
}
void Shear1 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2+k1, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6+k1, 0.6, 0.0);//cyan
    glEnd();
    glFlush ();
}
void Shear2 (void)
{
	glClear (GL_COLOR_BUFFER_BIT);
    glBegin (GL_TRIANGLE_STRIP);
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.2, 0.2, 0.0);//cyan
			glColor3f(1.0f, 1.0f,0.0f); glVertex3f (0.6, 0.2+k2, 0.0);//kuning
			glColor3f(1.0f, 0.0f,1.0f); glVertex3f (0.2, 0.6, 0.0);//ungu	
			glColor3f(0.5f, 1.0f, 1.0f); glVertex3f (0.6, 0.6+k2, 0.0);//cyan	
    glEnd();
    glFlush ();
}
int main (int argc, char*argv[])
{
	glutInit (&argc, argv);
    glutInitWindowSize (700,700);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGBA);
	cout<<"================================================"<<endl;
	cout<<"PROGRAM 5 MENU TRANSFORMASI(BESERTA PENGIMPUTAN)"<<endl;
	cout<<"================================================"<<endl;
	cout<<"By: Kelompok Ganjil SI3"<<endl<<endl;
	cout<<"Masukkan Pilihan: "<<endl;
		cout<<"1.BentukAwal"<<endl;
		cout<<"2.Translasikan"<<endl;
		cout<<"3.Rotasikan"<<endl;
		cout<<"4.Skalasikan"<<endl;
		cout<<"5.Refleksikan"<<endl;
		cout<<"6.Shearkan"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan;
		cout<<endl;
	if(pilihan == '1'){
		glutCreateWindow ("BENTUK AWAL");
    	glutDisplayFunc (BentukAwal);
    	glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();
	}
	else if(pilihan == '2'){
		cout<<"=================="<<endl;
		cout<<"TENTUKAN TRANSLASI"<<endl;
		cout<<"=================="<<endl;
		cout<<"masukkan x: ";cin>>xtrans;
		cout<<"masukkan y: ";cin>>ytrans;
		cout<<"masukkan z: ";cin>>ztrans;
		
    	glutCreateWindow ("TRANSLASI");
    	glutDisplayFunc (Translasi);
    	glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();
	}
	else if(pilihan == '3'){
		cout<<"==============="<<endl;
		cout<<"TENTUKAN ROTASI"<<endl;
		cout<<"==============="<<endl;
		cout<<"masukkan sudut: ";cin>>s;
		cout<<"masukkan x: ";cin>>xrot;
		cout<<"masukkan y: ";cin>>yrot;
		cout<<"masukkan z: ";cin>>zrot;
		
    	glutCreateWindow ("ROTASI");
    	glutDisplayFunc (Rotasi);
		glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();		
	}
	else if(pilihan == '4'){
		cout<<"================"<<endl;
		cout<<"TENTUKAN SKALASI"<<endl;
		cout<<"================"<<endl;
		cout<<"masukkan x: ";cin>>xscal;
		cout<<"masukkan y: ";cin>>yscal;
		cout<<"masukkan z: ";cin>>zscal;
		
    	glutCreateWindow ("SKALASI");
    	glutDisplayFunc (Skalasi);
		glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    	glutMainLoop ();		
	}
	else if(pilihan == '5'){
		cout<<"================="<<endl;
		cout<<"TENTUKAN REFLEKSI"<<endl;
		cout<<"================="<<endl;
		cout<<"Anda ingin merefleksikannya terhadap?"<<endl;
		cout<<"1.sumbu x"<<endl;
		cout<<"2.sumbu y"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan1;
		cout<<endl;
		if(pilihan1 == '1'){
			cout<<"========================================"<<endl;
			cout<<"TENTUKAN TITIK REFLEKSI TERHADAP SUMBU X"<<endl;
			cout<<"========================================"<<endl;
			cout<<"Tentukan titik"<<endl;
			cout<<"masukkan y: ";cin>>yref;
		
			glutCreateWindow ("REFLEKSI TERHADAP SUMBU X");
    		glutDisplayFunc (Refleksi1);
			glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    		glutMainLoop ();	
		}
		else if(pilihan1 == '2'){
			cout<<"========================================"<<endl;
			cout<<"TENTUKAN TITIK REFLEKSI TERHADAP SUMBU Y"<<endl;
			cout<<"========================================"<<endl;
			cout<<"Tentukan titik"<<endl;
			cout<<"masukkan x: ";cin>>xref;
			glutCreateWindow ("REFLEKSI TERHADAP SUMBU Y");
    		glutDisplayFunc (Refleksi2);
			glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    		glutMainLoop ();	
		}
		else{
		cout<<"Tidak ada pilihan "<<pilihan1<<"!!!";
	}
	}
	else if(pilihan == '6'){
    	cout<<"=============="<<endl;
		cout<<"TENTUKAN SHEAR"<<endl;
		cout<<"=============="<<endl;
		cout<<"Anda ingin meshearkannya terhadap?"<<endl;
		cout<<"1.sumbu x"<<endl;
		cout<<"2.sumbu y"<<endl;
		cout<<"pilihan anda? ";cin>>pilihan2;
		if(pilihan2 == '1'){
			cout<<"====================================="<<endl;
			cout<<"TENTUKAN TITIK SHEAR TERHADAP SUMBU X"<<endl;
			cout<<"====================================="<<endl;
			cout<<"Tentukan titik"<<endl;
			cout<<"masukkan panjang shear: ";cin>>k1;
		
			glutCreateWindow ("SHEAR TERHADAP SUMBU X");
    		glutDisplayFunc (Shear1);	
    		glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    		glutMainLoop ();
		}
		else if(pilihan2 == '2'){
			cout<<"====================================="<<endl;
			cout<<"TENTUKAN TITIK SHEAR TERHADAP SUMBU Y"<<endl;
			cout<<"====================================="<<endl;
			cout<<"Tentukan titik"<<endl;
			cout<<"masukkan panjang shear: ";cin>>k2;
			glutCreateWindow ("SHEAR TERHADAP SUMBU Y");
    		glutDisplayFunc (Shear2);		
    		glClearColor (1.0f, 1.0f, 1.0f, 1.0f);
    		glutMainLoop ();
		}
		else{
		cout<<"Tidak ada pilihan "<<pilihan2<<"!!!";
	}	
	}
	else{
		cout<<"Tidak ada pilihan "<<pilihan<<"!!!";
	}
    return 0;
}

